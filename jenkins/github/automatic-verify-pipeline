podTemplate(yaml: '''
              apiVersion: v1
              kind: Pod
              spec:
                containers:
                - name: jenkins-ubuntu
                  image: ubuntu:20.04
                  command:
                  - sleep
                  args: 
                  - 99d
''') {
  node(POD_LABEL) {
      sh 'printenv'
      stage('Checkout') {
        sh 'printenv'

        gitInfo =  checkout([$class: 'GitSCM', branches: [[name: 'pr/'+env.CHANGE_ID]], extensions: [[$class: 'SubmoduleOption', recursiveSubmodules: true]], userRemoteConfigs: [[credentialsId: 'github_username_pass', name: 'origin', refspec: '+refs/pull/*/head:refs/remotes/origin/pr/*', url: 'https://github.com/sebdet/oran-deployment.git']]])
        echo "Test: "+ gitInfo
        githubNotify description:'SMO Package verify job starts', repo:'oran-deployment', account: 'sebdet', status:'PENDING', sha:gitInfo.GIT_COMMIT, credentialsId:'github_username_pass'

      }
      container('jenkins-ubuntu') {
        stage('Setup tools') {
            sh 'apt-get update -y'
            sh 'DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata'
            sh 'apt-get install git wget sudo -y'
            sh 'wget https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl'
            sh 'mv kubectl /usr/bin'
            sh 'chmod a+x /usr/bin/kubectl'
            sh 'kubectl version'
            sh './scripts/layer-0/0-setup-tests-env.sh'
            sh './scripts/layer-0/0-setup-charts-museum.sh'
            sh './scripts/layer-0/0-setup-helm3.sh'
        }
        stage('Build ONAP charts') {
            sh './scripts/sub-scripts/build-onap.sh'
        }
        stage('Build ORAN charts') {
            sh './scripts/sub-scripts/build-oran.sh'
        }
        stage('Build ONAP charts') {
            sh './scripts/sub-scripts/build-tests.sh'
        }
        stage('Start SMO') {
            sh './scripts/layer-2/2-install-oran.sh pythonsdk-tests'
        }
        stage('Test ORAN') {
            dir("test/pythonsdk") {
              try {
                  sh 'tox'
                  githubNotify description:'SMO Package verify job SUCCESSFUL', repo:'oran-deployment', account: 'sebdet', status:'SUCCESS', sha:gitInfo.GIT_COMMIT, credentialsId:'github_username_pass'
              }
              catch(exec) {
                echo 'TOX tests crashed'
                githubNotify description:'SMO Package verify job FAILED, TOX tests crashed', repo:'oran-deployment', account: 'sebdet', status:'FAILURE', sha:gitInfo.GIT_COMMIT, credentialsId:'github_username_pass'
              }
            }
        }
        stage('Stop SMO') {
          sh './scripts/sub-scripts/uninstall-nonrtric.sh'
          sh './scripts/sub-scripts/uninstall-onap.sh'
        }
        stage('Get Results') {
          archiveArtifacts artifacts: 'test/pythonsdk/src/orantests/pythonsdk.debug.log, **/reports/junit/*.xml', fingerprint: true
          junit '**/reports/junit/*.xml'
        }
      }
   
  }
}
